name: CI / CD
on:
    push:
        branches: [ 'feat/@next' ]
    pull_request:
        branches: [ 'feat/@next' ]
jobs:
    install:
        name: Install
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 16.x ]
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2

            -   run: git checkout HEAD^2
                if: ${{ github.event_name == 'pull_request' }}

            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ matrix.node-version }}

            -   name: Install dependencies
                run: npm i

            -   name: Cache node modules
                uses: actions/cache@v3
                id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
                with:
                    path: ${{ steps.npm-cache-dir.outputs.dir }}
                    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-node-


    linter:
        name: Linter
        runs-on: ubuntu-latest
        needs: [install]
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2
            -   run: git checkout HEAD^2
                if: ${{ github.event_name == 'pull_request' }}
            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ matrix.node-version }}
            -   name: Get npm cache directory
                id: npm-cache-dir
                run: |
                    echo "::set-output name=dir::$(npm config get cache)"
            -   name: Run linter
                if: steps.npm-cache.outputs.cache-hit != 'true'
                run: npm run lint

    unit_test:
        name: Unit test
        runs-on: ubuntu-latest
        needs: [install]
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2
            -   run: git checkout HEAD^2
            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v2
                with:
                    node-version: ${{ matrix.node-version }}
            -   name: Get npm cache directory
                id: npm-cache-dir
                run: |
                    echo "::set-output name=dir::$(npm config get cache)"
            -   name: Run unit test
                if: steps.npm-cache.outputs.cache-hit != 'true'
                run: npm test